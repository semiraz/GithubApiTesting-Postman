{
	"info": {
		"_postman_id": "ca8dc310-8f41-461a-a6e0-d1134eaa5915",
		"name": "Test repository",
		"description": "This is a test repository created bu Postman",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "create new Github repository",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(500);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"baseUrl\", \"https://api.github.com\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "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",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Test repository S\",\n    \"description\": \"This is a test repository created by Postman\"\n} ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/repos",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"repos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get check Github repository",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "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",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/user/repos",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"repos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create bug/issue",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"pm.environment.set(\"issueNumber\", response.number);",
							"console.log(response.number);"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "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",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"Found a bug2\",\n    \"body\": \"This issue has been automatically created by Postman\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/repos/semiraz/Test-repository-S/issues",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"repos",
						"semiraz",
						"Test-repository-S",
						"issues"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get new bug/issue",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"pm.test(\"Check the issue name\", function () {",
							"    pm.expect(response.title).to.eql(\"Found a bug2\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "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",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/repos/semiraz/Test-repository-S/issues/{{issueNumber}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"repos",
						"semiraz",
						"Test-repository-S",
						"issues",
						"{{issueNumber}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create an issue comment",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "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",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"body\": \"Thank you for reporting this issue. I will look into it as soon as possible.\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/repos/semiraz/Test-repository-S/issues/{{issueNumber}}/comments",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"repos",
						"semiraz",
						"Test-repository-S",
						"issues",
						"{{issueNumber}}",
						"comments"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get an issue comment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "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",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.github.com/repos/semiraz/Test-repository-S/issues/comments",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"repos",
						"semiraz",
						"Test-repository-S",
						"issues",
						"comments"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Repository",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "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",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/repos/semiraz/Test-repository-S",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"repos",
						"semiraz",
						"Test-repository-S"
					]
				}
			},
			"response": []
		},
		{
			"name": "Checking deleted Repos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "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",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/repos/semiraz/Test-repository-S",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"repos",
						"semiraz",
						"Test-repository-S"
					]
				}
			},
			"response": []
		}
	]
}